// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "support@codewithazri.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/courses": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a paginated list of courses based on the specified page and limit parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get paginated list of courses",
                "operationId": "get-paginated-courses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with paginated courses",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.CourseDTO"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized, missing or invalid authentication token",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/v1/courses/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new course if it does not exist or fetch the existing course based on the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Create or fetch course details",
                "operationId": "create-or-fetch-course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID for creation or fetching",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with course details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CourseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized, missing or invalid authentication token",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new user if not exists or fetch the existing user based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create or fetch a user",
                "operationId": "create-or-fetch-user",
                "parameters": [
                    {
                        "description": "User data for creation or fetching",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUpdateDto"
                        }
                    },
                    {
                        "type": "string",
                        "description": "With the bearer started",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch the profile of the authenticated user based on the provided Authorization token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Fetch user profile",
                "operationId": "get-user-profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserProfileDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CourseDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "gallery": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CourseGalleryDTO"
                    }
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/language_enum.Language"
                },
                "name": {
                    "type": "string"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CourseReviewsDTO"
                    }
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CourseSectionDTO"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CourseTagsDTO"
                    }
                }
            }
        },
        "dto.CourseGalleryDTO": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.CourseLessonDTO": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "course_section_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "dto.CourseReviewsDTO": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "dto.CourseSectionDTO": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CourseLessonDTO"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CourseTagsDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUpdateDto": {
            "type": "object",
            "required": [
                "email",
                "name",
                "profilePicture"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profilePicture": {
                    "type": "string"
                }
            }
        },
        "dto.UserDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profilePicture": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "dto.UserProfileDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profilePicture": {
                    "type": "string"
                }
            }
        },
        "language_enum.Language": {
            "type": "string",
            "enum": [
                "id",
                "en"
            ],
            "x-enum-varnames": [
                "Indonesian",
                "English"
            ]
        },
        "response.Meta": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        },
        "response.ResponseError": {
            "type": "object",
            "properties": {
                "error": {},
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "CodeWithAzri API",
	Description:      "API documentation for CodeWithAzri, an educational platform that offers a free and collaborative environment for learning coding. Provides resources, exercises, and a community for both mobile app and web app users.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
